DROP DATABASE IF EXISTS postme_db;

DROP SCHEMA IF EXISTS postme CASCADE;
DROP USER IF EXISTS admin;

CREATE ROLE admin WITH LOGIN SUPERUSER PASSWORD '1111';

CREATE DATABASE postme_db;
CREATE SCHEMA postme;

CREATE TABLE postme.USER (
	ID SERIAL NOT NULL,
	NICKNAME VARCHAR(100) NOT NULL,
	FIRST_NAME VARCHAR(100) NOT NULL,
	LAST_NAME VARCHAR(100) NOT NULL,
	EMAIL VARCHAR(100) NOT NULL,
	PASSWORD VARCHAR(50),
	CONSTRAINT PK_USER_ID PRIMARY KEY (ID)
);

CREATE TABLE postme.POST (
	ID SERIAL NOT NULL,
	CONTENT VARCHAR(1000),
	CREATE_DATE DATE,
	USER_ID SERIAL NOT NULL,
	CONSTRAINT PK_POST_ID PRIMARY KEY (ID),
	CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES postme.User (ID)
);

CREATE TABLE postme.COMMENT (
	ID SERIAL NOT NULL,
	USER_ID SERIAL NOT NULL,
	POST_ID SERIAL NOT NULL,
	CONTENT VARCHAR(250),
	CREATE_DATE DATE,
	CONSTRAINT PK_COMMENT_ID PRIMARY KEY (ID),
	CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES postme.User (ID),
	CONSTRAINT FK_POST_ID FOREIGN KEY (POST_ID) REFERENCES postme.Post (ID)
);

CREATE TABLE postme.LIKE (
	ID SERIAL NOT NULL,
	USER_ID SERIAL NOT NULL,
	POST_ID SERIAL NOT NULL,
	CONSTRAINT PK_LIKE_ID PRIMARY KEY (ID),
	CONSTRAINT FK_USER_ID FOREIGN KEY (USER_ID) REFERENCES postme.User (ID),
	CONSTRAINT FK_POST_ID FOREIGN KEY (POST_ID) REFERENCES postme.Post (ID)
);
